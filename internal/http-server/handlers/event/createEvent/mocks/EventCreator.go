// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// EventCreator is an autogenerated mock type for the EventCreator type
type EventCreator struct {
	mock.Mock
}

// CreateEvent provides a mock function with given fields: title, date, totalSeats, deadline
func (_m *EventCreator) CreateEvent(title string, date time.Time, totalSeats int, deadline int) (int, error) {
	ret := _m.Called(title, date, totalSeats, deadline)

	if len(ret) == 0 {
		panic("no return value specified for CreateEvent")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(string, time.Time, int, int) (int, error)); ok {
		return rf(title, date, totalSeats, deadline)
	}
	if rf, ok := ret.Get(0).(func(string, time.Time, int, int) int); ok {
		r0 = rf(title, date, totalSeats, deadline)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(string, time.Time, int, int) error); ok {
		r1 = rf(title, date, totalSeats, deadline)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEventCreator creates a new instance of EventCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEventCreator(t interface {
	mock.TestingT
	Cleanup(func())
}) *EventCreator {
	mock := &EventCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
